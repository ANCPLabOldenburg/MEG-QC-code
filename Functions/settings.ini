[DEFAULT]
data_file = ../data/ck06an19_vp13/190521/vp13_block1-2.fif
#data_file = ../data/sub_HT05ND16/210811/mikado-1.fif/
#stim_channel = STI101
stim_channel = 
# stim_channel leave empty if want it to be detected automatically or write explicitely like stim_channel = STI101. Dont write as None! doest parce properly
mags_or_grads = both
# mags - only mags, grads - only grads, both - separate both

# Duration in seconds
#duration = 60
data_crop_tmin=30
data_crop_tmax=90
sid = 1
#sid is subject id. can be a list like 1,2,3,4 (NO Spaces, just comas  between!)

[Filter_and_resample]
l_freq=0.5
h_freq=100
method=iir

[Epoching]
event_dur = 1.2
epoch_tmin = -0.2
epoch_tmax = 1

[RMSE]
#do_for: both, mags, grads, none
do_for = both
std_lvl = 1

[PSD]
#do_for: both, mags, grads, none
do_for = both
freq_min = 0.5
freq_max = 100
mean_power_per_band_needed = True

#Extra settings: these can be changed if you undertsand what they men. otherwise leave so:
n_fft = 1000
#n_fft (float): The length of FFT used, must be >= n_per_seg (default: 256). The segments will be zero-padded if n_fft > n_per_seg. 
#        If n_per_seg is None, n_fft must be <= number of time points in the data. (*)
n_per_seg = 1000
#n_per_seg (float): Length of each Welch segment (windowed with a Hamming window). Defaults to None, which sets n_per_seg equal to n_fft. (*)
#    (*) These influence the bandwidth.

[PTP_manual]
#do_for: both, mags, grads, none
do_for = both
pair_dist_sec =  0.5
#pair_dist_sec - will hard code it when decide on best value after trying out different data sets. might be different for mags and grads
thresh_lvl  = 2
#thresh_lvl - scaling factor for threshold. write easy expanation for user. think of good range of possible values

[PTP_mne]
#do_for: both, mags, grads, none
do_for = both
peak_m = 3.5e-11 
peak_g = 4e-11 
# minimal PTP amplitude to count as peak
flat_m = 3e-15
flat_g = 3e-15
# max PTP amplitude to count as flat
ch_type_names = 

[EOG]
#do_for: both, mags, grads, none
do_for = both

[ECG]
#do_for: both, mags, grads, none
do_for = both

[Head_movement]
#do_for: both, mags, grads, none
do_for = both

[Muscle]
#do_for: both, mags, grads, none
do_for = both



